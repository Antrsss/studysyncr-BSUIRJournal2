// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/notes/{user}": {
            "get": {
                "description": "Returns JSON array of notes",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notes"
                ],
                "summary": "Get all notes of user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "current user",
                        "name": "user",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/notes.Note"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Upload a new note",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notes"
                ],
                "summary": "Post a note",
                "parameters": [
                    {
                        "type": "string",
                        "description": "current user",
                        "name": "user",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Note JSON",
                        "name": "note",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/notes.Note"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/notes.Note"
                        }
                    }
                }
            }
        },
        "/notes/{user}/{id}": {
            "get": {
                "description": "Returns JSON of note",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notes"
                ],
                "summary": "Get a note",
                "parameters": [
                    {
                        "type": "string",
                        "description": "current user",
                        "name": "user",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "note id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/notes.Note"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a note from db",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notes"
                ],
                "summary": "Delete a note",
                "parameters": [
                    {
                        "type": "string",
                        "description": "current user",
                        "name": "user",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "note id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/notes.Note"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates a note in the db",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notes"
                ],
                "summary": "Patch a note",
                "parameters": [
                    {
                        "type": "string",
                        "description": "current user",
                        "name": "user",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "note id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Note JSON",
                        "name": "note",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/notes.Note"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/notes.Note"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "notes.Note": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Studysyncr API",
	Description:      "A book management service API in Go using Gin framework.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
